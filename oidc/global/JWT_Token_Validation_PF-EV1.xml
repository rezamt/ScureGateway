<?xml version="1.0" encoding="UTF-8"?>
<exp:Export Version="3.0"
    xmlns:L7p="http://www.layer7tech.com/ws/policy"
    xmlns:exp="http://www.layer7tech.com/ws/policy/export" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
    <exp:References/>
    <wsp:Policy xmlns:L7p="http://www.layer7tech.com/ws/policy" xmlns:wsp="http://schemas.xmlsoap.org/ws/2002/12/policy">
        <wsp:All wsp:Usage="Required">
            <L7p:AuditDetailAssertion>
                <L7p:Detail stringValue="Policy Fragment: JWT Token Validation"/>
            </L7p:AuditDetailAssertion>
            <wsp:OneOrMore wsp:Usage="Required">
                <wsp:All wsp:Usage="Required">
                    <L7p:JwtDecode>
                        <L7p:AlgorithmSecretLocation intValue="1"/>
                        <L7p:AlgorithmSecretValue stringValue="00000000000000000000000000000002.ssl"/>
                        <L7p:IncomingToken stringValue="request.http.header.Authorization"/>
                        <L7p:OutputVariable stringValue="jwtToken"/>
                    </L7p:JwtDecode>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHtqd3RUb2tlbn0="/>
                        <L7p:ContentType stringValue="application/json; charset=utf-8"/>
                        <L7p:DataType variableDataType="message"/>
                        <L7p:VariableToSet stringValue="authToken"/>
                    </L7p:SetVariable>
                    <L7p:TrueAssertion/>
                </wsp:All>
                <wsp:All wsp:Usage="Required">
                    <L7p:HardcodedResponse>
                        <L7p:Base64ResponseBody stringValue="ewogICAgInN0YXR1cyI6ICJFcnJvciIsCiAgICAicmVhc29uIjogIkludmFsaWQgVG9rZW4iCn0="/>
                        <L7p:EarlyResponse booleanValue="true"/>
                        <L7p:ResponseContentType stringValue="application/json; charset=UTF-8"/>
                        <L7p:ResponseStatus stringValue="401"/>
                    </L7p:HardcodedResponse>
                    <L7p:FalseAssertion/>
                </wsp:All>
                <L7p:assertionComment>
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="- Validate Token Signature and Extract Token Info"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:assertionComment>
            </wsp:OneOrMore>
            <wsp:OneOrMore wsp:Usage="Required">
                <wsp:All wsp:Usage="Required">
                    <L7p:EvaluateJsonPathExpression>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue=" - Extract Nounce Value"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:Expression stringValue="$.nounce"/>
                        <L7p:OtherTargetMessageVariable stringValue="authToken"/>
                        <L7p:Target target="OTHER"/>
                    </L7p:EvaluateJsonPathExpression>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHtqc29uUGF0aC5yZXN1bHR9"/>
                        <L7p:VariableToSet stringValue="nounce"/>
                    </L7p:SetVariable>
                </wsp:All>
                <wsp:All wsp:Usage="Required">
                    <L7p:HardcodedResponse>
                        <L7p:Base64ResponseBody stringValue="ewogICAgInN0YXR1cyI6ICJFcnJvciIsCiAgICAicmVhc29uIjogIkludmFsaWQgVG9rZW4gRm9ybWF0Igp9"/>
                        <L7p:EarlyResponse booleanValue="true"/>
                        <L7p:ResponseContentType stringValue="application/json; charset=UTF-8"/>
                        <L7p:ResponseStatus stringValue="400"/>
                    </L7p:HardcodedResponse>
                    <L7p:FalseAssertion/>
                </wsp:All>
                <L7p:assertionComment>
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue="- Extracting Token Nounce Value"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:assertionComment>
            </wsp:OneOrMore>
            <wsp:OneOrMore wsp:Usage="Required">
                <wsp:All wsp:Usage="Required">
                    <L7p:EvaluateJsonPathExpression>
                        <L7p:AssertionComment assertionComment="included">
                            <L7p:Properties mapValue="included">
                                <L7p:entry>
                                    <L7p:key stringValue="RIGHT.COMMENT"/>
                                    <L7p:value stringValue=" - Extract Nounce Value"/>
                                </L7p:entry>
                            </L7p:Properties>
                        </L7p:AssertionComment>
                        <L7p:Expression stringValue="$.issuedAt"/>
                        <L7p:OtherTargetMessageVariable stringValue="authToken"/>
                        <L7p:Target target="OTHER"/>
                    </L7p:EvaluateJsonPathExpression>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48VG90YWxMaWZlVGltZS8+"/>
                        <L7p:ContentType stringValue="application/xml; charset=utf-8"/>
                        <L7p:DataType variableDataType="message"/>
                        <L7p:VariableToSet stringValue="totalTime"/>
                    </L7p:SetVariable>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JHtqc29uUGF0aC5yZXN1bHR9"/>
                        <L7p:VariableToSet stringValue="issueTime"/>
                    </L7p:SetVariable>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="JC5pc3N1ZWRBdA=="/>
                        <L7p:Enabled booleanValue="false"/>
                        <L7p:VariableToSet stringValue="issueTime"/>
                    </L7p:SetVariable>
                    <L7p:SetVariable>
                        <L7p:Base64Expression stringValue="MTIwMDAwMA=="/>
                        <L7p:DataType variableDataType="int"/>
                        <L7p:VariableToSet stringValue="lifeTime"/>
                    </L7p:SetVariable>
                    <L7p:XslTransformation>
                        <L7p:Direction intValue="-1"/>
                        <L7p:OtherTargetMessageVariable stringValue="totalTime"/>
                        <L7p:ResourceInfo staticResourceInfo="included">
                            <L7p:Document stringValueReference="inline"><![CDATA[<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:output omit-xml-declaration="yes" media-type="string"/>
    <xsl:param name="issueTime" select="''"/>
    <xsl:param name="lifeTime" select="''"/>
     <xsl:template match="/">
          <xsl:value-of select="$issueTime+$lifeTime"/>
     </xsl:template>
</xsl:stylesheet>]]></L7p:Document>
                        </L7p:ResourceInfo>
                        <L7p:Target target="OTHER"/>
                        <L7p:TransformName stringValue="Calculate Token Present Life Time"/>
                        <L7p:XsltVersion stringValue="1.0"/>
                    </L7p:XslTransformation>
                    <L7p:ComparisonAssertion>
                        <L7p:CaseSensitive booleanValue="false"/>
                        <L7p:Expression1 stringValue="${totalTime.mainpart}"/>
                        <L7p:ExpressionIsVariable booleanValue="false"/>
                        <L7p:Operator operatorNull="null"/>
                        <L7p:Predicates predicates="included">
                            <L7p:item dataType="included">
                                <L7p:Type variableDataType="string"/>
                            </L7p:item>
                            <L7p:item binary="included">
                                <L7p:Operator operator="GT"/>
                                <L7p:RightValue stringValue="${gateway.time.millis}"/>
                            </L7p:item>
                        </L7p:Predicates>
                    </L7p:ComparisonAssertion>
                </wsp:All>
                <wsp:All wsp:Usage="Required">
                    <L7p:HardcodedResponse>
                        <L7p:Base64ResponseBody stringValue="ewogICAgInN0YXR1cyI6ICJFcnJvciIsCiAgICAicmVhc29uIjogIkludmFsaWQgVG9rZW4gLSBFeHBpcmVkIgp9"/>
                        <L7p:EarlyResponse booleanValue="true"/>
                        <L7p:ResponseContentType stringValue="application/json; charset=UTF-8"/>
                        <L7p:ResponseStatus stringValue="403"/>
                    </L7p:HardcodedResponse>
                    <L7p:FalseAssertion/>
                </wsp:All>
                <L7p:assertionComment>
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue=" - Validating Token Timestamp"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:assertionComment>
            </wsp:OneOrMore>
            <wsp:OneOrMore wsp:Usage="Required">
                <L7p:CacheLookup>
                    <L7p:CacheEntryKey stringValue="${nounce}"/>
                    <L7p:CacheId stringValue="TokenCache"/>
                    <L7p:ContentTypeOverride stringValue=""/>
                    <L7p:MaxEntryAgeSeconds stringValue="1200"/>
                </L7p:CacheLookup>
                <wsp:All wsp:Usage="Required">
                    <L7p:HardcodedResponse>
                        <L7p:Base64ResponseBody stringValue="ewogICAgInN0YXR1cyI6ICJFcnJvciIsCiAgICAicmVhc29uIjogIkludmFsaWQgTm91bmNlIgp9"/>
                        <L7p:EarlyResponse booleanValue="true"/>
                        <L7p:ResponseContentType stringValue="application/json; charset=UTF-8"/>
                        <L7p:ResponseStatus stringValue="401"/>
                    </L7p:HardcodedResponse>
                    <L7p:FalseAssertion/>
                </wsp:All>
                <L7p:assertionComment>
                    <L7p:Properties mapValue="included">
                        <L7p:entry>
                            <L7p:key stringValue="RIGHT.COMMENT"/>
                            <L7p:value stringValue=" - Validate Nounce / Reply Attack"/>
                        </L7p:entry>
                    </L7p:Properties>
                </L7p:assertionComment>
            </wsp:OneOrMore>
        </wsp:All>
    </wsp:Policy>
</exp:Export>

